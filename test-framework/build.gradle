/*
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.jvm)

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Apply the java-library plugin for API and implementation separation.
    id 'maven-publish'
}


group = "edu.austral.dissis.chess"
version = "1.1.0"

repositories {
    mavenLocal()
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    implementation 'org.jetbrains.kotlin:kotlin-test-junit5'

    // Use the JUnit 5 integration.
    implementation libs.junit.jupiter.engine

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'com.github.bhlangonijr:chesslib:1.3.3'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withJavadocJar()
}

// Define a task for creating a sources jar
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Publish settings
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = URI.create("https://maven.pkg.github.com/austral-ingsis/chess-test-framework")
            credentials {
                username = System.getenv("GITHUB_USER")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
            artifact(sourcesJar)  // Attach the explicitly defined sources jar
        }
    }
}